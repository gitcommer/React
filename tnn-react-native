12 May 2020
https://www.youtube.com/watch?v=ur6I5m2nTvk&list=PL4cUxeGkcC9ixPU-QkScoRBVxtPPzVjrQ
https://github.com/iamshaunjp/react-native-tutorial

NOTES
VISUAL STUDIO CODE
2.INSTALL, CREATE PROJECT, RUN
3.Views, Text & Styles - <View>(or div), <Text>(or <p>)
4.Using State or Hooks - when click button update state
7.Flat List Component - display block, inline, columns, id error
8.when click the list item, fade the list item
9.Todo App 1 - using different file components (add header component)
10.Todo App 2 - list will delete when click and item
11-12. Todo App 3 - add data and diplay, hold data and it will delete, alert message if 3 characters only
13. whenever you click anywhere in the screen the keyboard hide
14.Flexbox Basics - div layouting row and column
15.Icons & More Flexbox - how to use icon using expo.io
16-17.Create Reviews App - custom fonts using expo, download and use google fonts, 
18.Global Styles -  

NOTES
-------------------------------------------------------------------------
cli - command line interface
expo cli - native code, simplier
react native cli - you need to configure, pure native app, no additional features, import other library
css - android and ios dont understand css, react emulate id to understand css

2. INSTALL, CREATE PROJECT, RUN
-------------------------------------------------------------------------
nodejs
andriod studio - https://developer.android.com/studio/install
               - configure, avd(android virtual devices) manager, create virtual devices, nexus 6p, pie
               - open android to terminal: bin$ ./studio.sh
expo.io/learn - npm install expo-cli --global
create project - cmd/project> expo init myproject, blank, name: myproject, cd myproject, npm start
run mobile - install expo client, camera scan qi code
to run: npm start or expo start

VISUAL STUDIO CODE
-------------------------------------------------------------------------
es7 react native snippets

3.Views, Text & Styles
-------------------------------------------------------------------------
App.js
    1. <View style={styles.container}>

    2. const styles = StyleSheet.create({
        container: {
            flex: 1,
            backgroundColor: '#fff',
            alignItems: 'center',
            justifyContent: 'center',
        },
    });

note: <Text style={styles.boldText}>Tae tubol <Text>igit</Text> ka!</Text>      //<Text>igit</Text> this will become bold also, inheret in parent

4. Using State or Hooks - when click button update state
-------------------------------------------------------------------------
sample1: App.js 

            import React, {useState} from 'react';                      //1.state/hooks - 
            import { StyleSheet, Text, View } from 'react-native';

            export default function App() {
            const [name, setName] = useState('shaun');                 //2.state/hooks - 'shaun' is the default variable 'name'
            return (
                <View style={styles.container}>
                <Text>My name is {name}</Text>                         {/*3.state/hooks - output: My name is shaun*/}                             
                </View>
            );
            }

sample2: App.js

            import React, { useState } from 'react';
            import { StyleSheet, Text, View, Button } from 'react-native';                  //1.state/hooks - Button when use click button

            export default function App() {
            const [name, setName] = useState('shaun');
            const [person, setPerson] = useState({ name: 'mario', age: 40 });

            const clickHandler = () => {
                setName('chun-li');
                setPerson({ name: 'luigi', age: 45 });                                      //3.state/hooks - update the state to this data
            };

            return (
                <View style={styles.container}>
                <Text>My name is {name}</Text>
                <Text>His name is {person.name} and his age is {person.age}</Text>          //4.state/hooks - display
                <View style={styles.buttonContainer}>
                    <Button title='update state' onPress={clickHandler} />                  //2.state/hooks - when click button
                </View>
                </View>
            );
            }

            const styles = StyleSheet.create({
            container: {
                flex: 1,
                backgroundColor: '#fff',
                alignItems: 'center',
                justifyContent: 'center',
            },
            buttonContainer: {
                marginTop: 20,
            }
            });

7. Flat List Component - display block, inline, columns, id error
-------------------------------------------------------------------------
App.js 

    import React, { useState } from 'react';
    import { StyleSheet, Text, View, FlatList } from 'react-native';    //1.flatlist - 

    export default function App() {
    const [people, setPeople] = useState([
        { name: 'shaun', id: '1' },
        { name: 'yoshi', id: '2' },
        { name: 'mario', id: '3' },
        { name: 'luigi', id: '4' },
        { name: 'peach', id: '5' },
        { name: 'toad', id: '6' },
        { name: 'bowser', id: '7' },
    ]);

    return (
        <View style={styles.container}>

        <FlatList                                                       //2.flatlist - 
            numColumns={2}                                              // 2 column
            keyExtractor={(item) => item.id}                            // this is use kong naay error sa key
            data={people}                                               // pass the people data to data
            renderItem={({ item }) => (                                 // item is the data in array 
            <Text style={styles.item}>{item.name}</Text>                // display name in the array
            )}
        />

        </View>
    );
    }

    const styles = StyleSheet.create({
    container: {
        flex: 1,
        paddingTop: 40,
        paddingHorizontal: 20,
        backgroundColor: '#fff',
    },
    item: {
        flex: 1,
        marginHorizontal: 10,
        marginTop: 24,
        padding: 30,
        backgroundColor: 'pink',
        fontSize: 24,
    },
    });

8. when click the list item, fade the list item
-------------------------------------------------------------------------
App.js

    import React, { useState } from 'react';
    import { StyleSheet, Text, View, FlatList, TouchableOpacity } from 'react-native';      //1.touchable - TouchableOpacity

    export default function App() {
    const [people, setPeople] = useState([
        { name: 'shaun', id: '1' },
        { name: 'yoshi', id: '2' },
        { name: 'mario', id: '3' },
        { name: 'luigi', id: '4' },
        { name: 'peach', id: '5' },
        { name: 'toad', id: '6' },
        { name: 'bowser', id: '7' },
    ]);

    const pressHandler = (id) => {                                //3.touchable - 
        console.log(id);                                          //  display id in the console
        setPeople((prevPeople) => {                               //4.touchable - (prevPeople) is the current data in the array
        return prevPeople.filter(person => person.id  != id);     //5.touchable - search the id if wala siya sa array retrun true and keep the item in the array
        });
    };

    return (
        <View style={styles.container}>

        <FlatList 
            numColumns={2}
            keyExtractor={(item) => item.id} 
            data={people} 
            renderItem={({ item }) => (
            <TouchableOpacity onPress={() => pressHandler(item.id)}>      {/*2.touchable - when press onPress={() send data to pressHandler(item.id)*/}
                <Text style={styles.item}>{item.name}</Text>              {/*  display data and apply css*/}
            </TouchableOpacity>
            )}
        />

        </View>
    );
    }

    const styles = StyleSheet.create({
    container: {
        flex: 1,
        paddingTop: 40,
        paddingHorizontal: 20,
        backgroundColor: '#fff',
    },
    item: {
        flex: 1,
        marginHorizontal: 10,
        marginTop: 24,
        padding: 30,
        backgroundColor: 'pink',
        fontSize: 24,
    },
    });

9. Todo App 1 - using different file components (add header component)
-------------------------------------------------------------------------
1.componets/header.js

    import React from 'react';
    import { View, Text, StyleSheet } from 'react-native';

    export default function Header() {                  //1.
    return (
        <View style={styles.header}>
        <Text style={styles.title}>My Todos</Text>
        </View>
    );
    }

    const styles = StyleSheet.create({
    header: {
        height: 80,
        paddingTop: 38,
        backgroundColor: 'coral',
    },
    title: {
        textAlign: 'center',
        color: '#fff',
        fontSize: 20,
        fontWeight: 'bold',
    }
    });

2.App.js 

    import React, { useState } from 'react';
    import { StyleSheet, Text, View, FlatList } from 'react-native';
    import Header from './components/header';                               //2.

    export default function App() {
    const [todos, setTodos] = useState([
        { text: 'buy coffee', key: '1' },
        { text: 'create an app', key: '2' },
        { text: 'play on the switch', key: '3' }
    ]);


    return (
        <View style={styles.container}>
        <Header />                                                          //3.
        <View style={styles.content}>
            {/* add todo form */}
            <View style={styles.list}>
            <FlatList
                data={todos}
                renderItem={({ item }) => (
                <Text>{item.text}</Text>
                )}
            />
            </View>
        </View>
        </View>
    );
    }

    const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#fff',
    },
    content: {
        padding: 40,
    },
    list: {
        marginTop: 20,
    },
    });

10. Todo App 2 - list will delete when click and item
-------------------------------------------------------------------------
1.App.js 

    import React, { useState } from 'react';
    import { StyleSheet, Text, View, FlatList } from 'react-native';
    import Header from './components/header';
    import TodoItem from './components/todoItem';

    export default function App() {
    const [todos, setTodos] = useState([
        { text: 'buy coffee', key: '1' },
        { text: 'create an app', key: '2' },
        { text: 'play on the switch', key: '3' }
    ]);

    const pressHandler = (key) => {
        setTodos(prevTodos => {
        return prevTodos.filter(todo => todo.key != key);
        });
    };

    return (
        <View style={styles.container}>
        <Header />
        <View style={styles.content}>
            {/* add todo form */}
            <View style={styles.list}>
            <FlatList
                data={todos}
                renderItem={({ item }) => (                                 //item is the array data
                <TodoItem item={item} pressHandler={pressHandler} />
                )}
            />
            </View>
        </View>
        </View>
    );
    }

    const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#fff',
    },
    content: {
        padding: 40,
    },
    list: {
        marginTop: 20,
    },
    });

2.todoitem.js 

    import React from 'react'
    import {StyleSheet, TouchableOpacity, Text} from 'react-native';

    export default function TodoItem({ pressHandler, item }) {
    return (
        <TouchableOpacity onPress={() => pressHandler(item.key)}>
        <Text style={styles.item}>{item.text}</Text>                    //item.text - is the data in the state in App.js
        </TouchableOpacity>
    )
    }

    const styles = StyleSheet.create({
    item: {
        padding: 16,
        marginTop: 16,
        borderColor: '#bbb',
        borderWidth: 1,
        borderStyle: "dashed",
        borderRadius: 1,
        borderRadius: 10,
    }
    });

11-12. Todo App 3 - add data and diplay, hold data and it will delete, alert message if 3 characters only
13. whenever you click anywhere in the screen the keyboard hide
-------------------------------------------------------------------------
App.js 

    import React, { useState } from 'react';
    import { StyleSheet, View, FlatList, Alert, TouchableWithoutFeedback, Keyboard } from 'react-native';       //13.1 - Keyboard
    import Header from './components/header';
    import TodoItem from './components/todoItem';
    import AddTodo from './components/addTodo';                                       //4.

    export default function App() {
    const [todos, setTodos] = useState([
        { text: 'buy coffee', key: '1' },
        { text: 'create an app', key: '2' },
        { text: 'play on the switch', key: '3' },
    ]);

    const pressHandler = (key) => {
        setTodos(prevTodos => {
        return prevTodos.filter(todo => todo.key != key);
        });
    };

    const submitHandler = (text) => {                                               //5.(text) - this will recieve the data of addTodo.js, state when button is clicked
        if(text.length > 3){                                                        //6.if input more than 3 characters, display to page else alert message
        setText('');
        setTodos(prevTodos => {                                                     //7.prevTodos - is a new array that store the data of the prev and new data inserted
            return [
            { text, key: Math.random().toString() },                                //8.this will insert new data in the state (text: and key:)
            ...prevTodos
            ];
        });
        } else {
        Alert.alert('OOPS', 'Todo must be over 3 characters long', [
            {text: 'Understood', onPress: () => console.log('alert closed') }
        ]);
        }
    };

    return (
        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>               //13.2 - whenever you click anywhere in the screen the keyboard hide
        <View style={styles.container}>
            <Header />
            <View style={styles.content}>
            <AddTodo submitHandler={submitHandler} />                               //9.
            <View style={styles.list}>
                <FlatList
                data={todos}
                renderItem={({ item }) => (
                    <TodoItem item={item} pressHandler={pressHandler} />
                )}
                />
            </View>
            </View>
        </View>
        </TouchableWithoutFeedback>
    );
    }

    const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#fff',
    },
    content: {
        padding: 40,
    },
    list: {
        marginTop: 20,
    },
    });

components/addTodo.js 

    import React, { useState } from 'react';
    import { StyleSheet, View, TextInput, Button } from 'react-native';

    export default function AddTodo({ submitHandler }) {
    [text, setText] = useState('');                                                             //3. useState('') - get data of the input and update to setText, use text to send the data to App.js

    const changeHandler = (val) => {                                                            //2. get data of the input and store to setText
        setText(val);
    };

    return (
        <View>
        <TextInput 
            style={styles.input} 
            placeholder='new todo...'
            onChangeText={changeHandler} 
            value={text} 
        />
        <Button color='coral' onPress={() => submitHandler(text)} title='add todo' />           //1. onPress={() - when button is click, fire a function
        </View>
    );
    }

    const styles = StyleSheet.create({
    input: {
        marginBottom: 10,
        paddingHorizontal: 8,
        paddingVertical: 6,
        borderBottomWidth: 1,
        borderBottomColor: '#ddd',
    },
    });

14.Flexbox Basics - div layouting row and column
-------------------------------------------------------------------------
1.App.js 

    import React, { useState } from 'react';
    import { StyleSheet, View, FlatList, Alert, TouchableWithoutFeedback, Keyboard } from 'react-native';
    import Header from './components/header';
    import TodoItem from './components/todoItem';
    import AddTodo from './components/addTodo';
    import Sandbox from './components/sandbox';                                         //14.1 - sandbox.js

    export default function App() {
    const [todos, setTodos] = useState([
        { text: 'buy coffee', key: '1' },
        { text: 'create an app', key: '2' },
        { text: 'play on the switch', key: '3' },
    ]);

    const pressHandler = (key) => {
        setTodos(prevTodos => {
        return prevTodos.filter(todo => todo.key != key);
        });
    };

    const submitHandler = (text) => {
        if(text.length > 3){
        setTodos(prevTodos => {
            return [
            { text, key: Math.random().toString() },
            ...prevTodos
            ];
        });
        } else {
        Alert.alert('OOPS', 'Todo must be over 3 characters long', [
            {text: 'Understood', onPress: () => console.log('alert closed') }
        ]);
        }
    };

    return (
        // <Sandbox />                                                                  //14.2 - wrap the component
        <TouchableWithoutFeedback onPress={() => {
        Keyboard.dismiss();
        console.log('dismissed');
        }}>
        <View style={styles.container}>
            <Header />
            <View style={styles.content}>
            <AddTodo submitHandler={submitHandler} />
            <View style={styles.list}>
                <FlatList
                data={todos}
                renderItem={({ item }) => (
                    <TodoItem item={item} pressHandler={pressHandler} />
                )}
                />
            </View>
            </View>
        </View>
        </TouchableWithoutFeedback>
    );
    }

    const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#fff',
    },
    content: {
        padding: 40,
        //backgroundColor: 'grey',
        flex: 1,
    },
    list: {
        marginTop: 20,
        //backgroundColor: 'lightgrey',
        flex: 1,
    },
    });

2.components/sandbox.js 

    import React from 'react';
    import { StyleSheet, Text, View } from 'react-native';

    export default function Sandbox() {
    return (
        <View style={styles.container}>
        <Text style={styles.boxOne}>one</Text>
        <Text style={styles.boxTwo}>two</Text>
        <Text style={styles.boxThree}>three</Text>
        <Text style={styles.boxFour}>four</Text>
        </View>
    );
    }

    const styles = StyleSheet.create({
    container: {
        paddingTop: 40,
        backgroundColor: '#ddd',
        flexDirection: 'row',                                           //14.3.flexDirection: 'row' or 'column' - display in row the container:
        justifyContent: 'space-around',                                 //14.3.justifyContent: 'space-around(LRTB)' or 'center' or flex-end(right side) or start(left-side) or space-between(marginRL)
        alignItems: 'center',                                           //14.4.alignItems: 'center' or 'flex-start' or 'flex-end'
        height: '100%',
    },
    boxOne: {
        flex: 1,                                                        //14.3.flex: 1 - default row or column, full height or occupy the whole page lenght
        backgroundColor: 'violet',
        padding: 10,                                                    //14.4.
    },
    boxTwo: {
        flex: 2,
        backgroundColor: 'gold',
        padding: 10,                                                    //14.4.
        alignSelf: 'flex-end',
    },
    boxThree: {
        flex: 1,
        backgroundColor: 'coral',
        padding: 10,                                                    //14.4.
    },
    boxFour: {
        flex: 3,
        backgroundColor: 'skyblue',
        padding: 10,                                                    //14.4.
        alignSelf: 'flex-start',
    }
    });

15.Icons & More Flexbox - how to use icon using expo.io
-------------------------------------------------------------------------
1.https://docs.expo.io/guides/icons/ or https://icons.expo.fyi/ - you will find available icon in expo

2.components/todoItem.js

    import React from 'react'
    import {StyleSheet, TouchableOpacity, Text, View} from 'react-native';
    import { MaterialIcons } from '@expo/vector-icons';                             //15.1. import

    export default function TodoItem({ pressHandler, item }) {
    return (
        <TouchableOpacity onPress={() => pressHandler(item.key)}>
        <View style={styles.item}>
            <MaterialIcons name='delete' size={18} color='#333' />                  //15.2. name='delete'(is the icon), size={18}(size of icon)
            <Text style={styles.itemText}>{item.text}</Text>                        //      css of icon
        </View>
        </TouchableOpacity>
    )
    }

    const styles = StyleSheet.create({
    item: {
        padding: 16,
        marginTop: 16,
        borderColor: '#bbb',
        borderWidth: 1,
        borderStyle: "dashed",
        borderRadius: 1,
        borderRadius: 10,
        flexDirection: 'row',                                                       //15.3. para ma inline ang icon og ang text
        alignItems: 'center',
    },
    itemText: {
        marginLeft: 10,
    }
    });

16-17.Create Reviews App - custom fonts using expo, download and use google fonts, 
-------------------------------------------------------------------------
1.https://docs.expo.io/guides/using-custom-fonts/
2.download google fonts and save to assets folder like assets/fonts
3.desktop> expo init gamezone, blank

4.App.js 

    import React, { useState } from 'react';
    import Home from './screens/home';
    import * as Font from 'expo-font';                                      //1.expo-font - 
    import { AppLoading } from 'expo';

    const getFonts = () => Font.loadAsync({                                 //2.expo-font - 
        'nunito-regular': require('./assets/fonts/Nunito-Regular.ttf'),
        'nunito-bold': require('./assets/fonts/Nunito-Bold.ttf'),
    });

    export default function App() {
        const [fontsLoaded, setFontsLoaded] = useState(false);              //3.expo-font - state for fonts

    if (fontsLoaded) {
        return (
        <Home />
        );
    } else {
        return (
        <AppLoading                                                         //4.expo-font - this is the components for fonts
            startAsync={getFonts} 
            onFinish={() => setFontsLoaded(true)} 
        />
        )
    }
    }

5.home.js 

    import React from 'react';
    import { StyleSheet, View, Text } from 'react-native';

    export default function Home() {
    return (
        <View style={styles.container}>
        <Text style={styles.titleText}>Home Screen</Text>                   //5.expo-font - 
        </View>
    );
    }

    const styles = StyleSheet.create({
    container: {
        padding: 24,
    },
    titleText: {                                                            //6.expo-font - use the google fonts
        fontFamily: 'nunito-bold',
        fontSize: 18,
    }
    });

18.Global Styles -  
-------------------------------------------------------------------------
1.project folder/styles/global.js 

    import { StyleSheet } from 'react-native';              //1.StyleSheet

    export const globalStyles = StyleSheet.create({         //2.globalStyles
    titleText: {
        fontSize: 18,
        fontWeight: 'bold',
        color: '#333',
    },
    paragraph: {
        marginVertical: 8,
        lineHeight: 20,
    },
    container: {
        flex: 1,
        padding: 20,
    },
    });
    
2.components/home.js, about.js, reviewDetails.js

    import React from 'react';
    import { StyleSheet, View, Text } from 'react-native';
    import { globalStyles } from '../styles/global';                //3.globalStyles

    export default function Home() {
    return (
        <View style={globalStyles.container}>                       //4.globalStyles
        <Text style={globalStyles.titleText}>Home Screen</Text>
        </View>
    );
    }

19-21.React Navigation Setup - using stack navigation, bali i push, pop niya ang page sa stack
-------------------------------------------------------------------------
1.https://reactnavigation.org/ 
    - project/npm install react-navigation
    - project/expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view
    - project/npm install react-navigation-stack
    - project/routes/

2.routes/homeStack.js 

    import { createStackNavigator } from 'react-navigation-stack';          //1.
    import { createAppContainer } from 'react-navigation';                  //2.
    import Home from '../screens/home';                                     //3.
    import ReviewDetails from '../screens/reviewDetails';

    const screens = {
    Home: {                                                                 //4.this is the default page when run the app
        screen: Home,                                                       //5.screens/home.js - mao ni na page i display
    },
    ReviewDetails: {
        screen: ReviewDetails,                                              //6.screens/reviewDetails.js - 
    },
    };

    const HomeStack = createStackNavigator(screens);                        //7.home stack navigator screens

    export default createAppContainer(HomeStack);                           //8.

3.App.js 

    import React, { useState } from 'react';
    import * as Font from 'expo-font';
    import { AppLoading } from 'expo';
    import Navigator from './routes/homeStack';                             //9.

    const getFonts = () => Font.loadAsync({
    'nunito-regular': require('./assets/fonts/Nunito-Regular.ttf'),
    'nunito-bold': require('./assets/fonts/Nunito-Bold.ttf'),
    });

    export default function App() {
    const [fontsLoaded, setFontsLoaded] = useState(false);

    if (fontsLoaded) {
        return (
        <Navigator />                                                       //10.this will get the data of const HomeStack = createStackNavigator(screens);
        );
    } else {
        return (
        <AppLoading 
            startAsync={getFonts} 
            onFinish={() => setFontsLoaded(true)} 
        />
        )
    }
    }

home.js 

    import React from 'react';
    import { StyleSheet, View, Text, Button } from 'react-native';                  //11.
    import { globalStyles } from '../styles/global';

    export default function Home({ navigation }) {                                  //13.if you do not use props, this is called deconstructor

    const pressHandler = () => {
        //navigation.navigate('ReviewDetails');                                     //14.when click on button, navigate to this page (has back arrow button)
        navigation.push('ReviewDetails');                                           //   using push, same result
    }

    return (
        <View style={globalStyles.container}>
        <Text style={globalStyles.titleText}>Home Screen</Text>
        <Button title='to review details screen' onPress={pressHandler} />          //12.this button has a props
        </View>
    );
    }

reviewDetails.js 

    import React from 'react';
    import { StyleSheet, View, Text, Button } from 'react-native';                  //1.manual-navigation - Button
    import { globalStyles } from '../styles/global';

    export default function ReviewDetails({ navigation }) {

    const pressHandler = () => {                                                    //3.manual-navigation - same result to //14.
        navigation.goBack();
    }

    return (
        <View style={globalStyles.container}>
        <Text>ReviewDetails Screen</Text>
        <Button title='back to home screen' onPress={pressHandler} />               //2.manual-navigation - 
        </View>
    );
    }

22.Passing Data Between Screens or pages (navigation) - when click the text the home.js, display the data in reviewDetails.js
-------------------------------------------------------------------------
1.screens/home.js 
    import React, { useState } from 'react';
    import { StyleSheet, View, Text, TouchableOpacity, FlatList } from 'react-native';              //1.TouchableOpacity, FlatList
    import { globalStyles } from '../styles/global';

    export default function Home({ navigation }) {
    const [reviews, setReviews] = useState([
        { title: 'Zelda, Breath of Fresh Air', rating: 5, body: 'lorem ipsum', key: '1' },
        { title: 'Gotta Catch Them All (again)', rating: 4, body: 'lorem ipsum', key: '2' },
        { title: 'Not So "Final" Fantasy', rating: 3, body: 'lorem ipsum', key: '3' },
    ]);

    return (
        <View style={globalStyles.container}>
        <FlatList data={reviews} renderItem={({ item }) => (                                        //2.data={reviews} - cycle the data of the state, {item} - hold cycle the data of the state
            <TouchableOpacity onPress={() => navigation.navigate('ReviewDetails', item)}>           //3.('ReviewDetails', item) - this is use to pass the data of the state
            <Text style={globalStyles.titleText}>{ item.title }</Text>                              //4.display
            </TouchableOpacity>
        )} />
        </View>
    );
    }

2.screens/reviewDetails.js 

    import React from 'react';
    import { StyleSheet, View, Text } from 'react-native';
    import { globalStyles } from '../styles/global';

    export default function ReviewDetails({ navigation }) {
    return (
        <View style={globalStyles.container}>
        <Text>{ navigation.getParam('title') }</Text>                                               //5.display data in reviewDetails.js after clicking in home.js 
        <Text>{ navigation.getParam('body') }</Text>
        <Text>{ navigation.getParam('rating') }</Text>
        </View>
    );
    }

23.Navigation Options - h1 title header sa screen or page, default css in all 'title header'
-------------------------------------------------------------------------
1.gamezone/routes/homeStack.js 

    import { createStackNavigator } from 'react-navigation-stack';
    import { createAppContainer } from 'react-navigation';
    import Home from '../screens/home';
    import ReviewDetails from '../screens/reviewDetails';

    const screens = {
    Home: {
        screen: Home,
        navigationOptions: {
        title: 'GameZone',                                              //1.h1 title sa screen or page
        //headerStyle: { backgroundColor: '#eee' }                      //2.css of the title
        }
    },
    ReviewDetails: {
        screen: ReviewDetails,
        navigationOptions: {
        title: 'Review Details',
        //headerStyle: { backgroundColor: '#eee' }
        }
    },
    };

    // home stack navigator screens
    const HomeStack = createStackNavigator(screens, {
    defaultNavigationOptions: {                                         //3.this is the default css in all title
        headerTintColor: '#444',
        headerStyle: { backgroundColor: '#eee', height: 60 }
    }
    });

    export default createAppContainer(HomeStack);

23.Drawer Navigation - navigation link (buger nav icon)
-------------------------------------------------------------------------
1.cmd/gamezone> npm install react-navigator-drawer
2.routes/aboutStack.js 

        import { createStackNavigator } from 'react-navigation-stack';
        import About from '../screens/about';

        const screens = {
        About: {
            screen: About,
            navigationOptions: {
            title: 'About GameZone'
            },
        },
        }

        const AboutStack = createStackNavigator(screens, {
        defaultNavigationOptions: {
            headerTintColor: '#444',
            headerStyle: { backgroundColor: '#eee', height: 60 },
        }
        });

        export default AboutStack;

3.routes/homeStack.js  

        import { createStackNavigator } from 'react-navigation-stack';
        import Home from '../screens/home';
        import ReviewDetails from '../screens/reviewDetails';

        const screens = {
        Home: {
            screen: Home,
            navigationOptions: {
            title: 'GameZone',
            }
        },
        ReviewDetails: {
            screen: ReviewDetails,
            navigationOptions: {
            title: 'Review Details',
            }
        },
        };

        // home stack navigator screens
        const HomeStack = createStackNavigator(screens, {
        defaultNavigationOptions: {
            headerTintColor: '#444',
            headerStyle: { backgroundColor: '#eee', height: 60 }
        }
        });

        export default HomeStack;

4.routes/drawer.js 

        import { createDrawerNavigator } from 'react-navigation-drawer';
        import { createAppContainer } from 'react-navigation';

        // stacks
        import HomeStack from './homeStack';
        import AboutStack from './aboutStack';

        // drawer navigation options
        const RootDrawerNavigator = createDrawerNavigator({
        Home: {
            screen: HomeStack,
        },
        About: {
            screen: AboutStack,
        },
        });

        export default createAppContainer(RootDrawerNavigator);

25.Custom Header Component - when click burger icon, open the menu bar
-------------------------------------------------------------------------
1.gamezone/shared/header.js                                                                         //shared folder use when you have to share file

        import React from 'react';
        import { StyleSheet, Text, View} from 'react-native';                                       //1.css
        import { MaterialIcons } from '@expo/vector-icons';                                         //1.buger icon

        export default function Header({ title, navigation }) {

        const openMenu = () => {                                                                    //4.buger icon - when click burger icon, open the menu bar
            navigation.openDrawer();
        }

        return (
            <View style={styles.header}>
                <MaterialIcons name='menu' size={28} onPress={openMenu} style={styles.icon} />      //2.buger icon
                <View>
                    <Text style={styles.headerText}>{title}</Text>
                </View>
            </View>
        );
        }

        const styles = StyleSheet.create({
        header: {
            width: '100%',
            height: '100%',
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
        },
        headerText: {
            fontWeight: 'bold',
            fontSize: 20,
            color: '#333',
            letterSpacing: 1,
        },
        icon: {
            position: 'absolute',
            left: 16,
        }
        });

2.gamezone/routes/homeStack.js

        import { createStackNavigator } from 'react-navigation-stack';
        import React from 'react';                                                              //1.
        import Header from '../shared/header';                                                  //2.
        import Home from '../screens/home';
        import ReviewDetails from '../screens/reviewDetails';

        const screens = {
        Home: {
            screen: Home,
            navigationOptions: ({ navigation }) => {
            return {
                headerTitle: () => <Header title='GameZone' navigation={navigation} />          //3.function that return component
            }
            },
        },
        ReviewDetails: {
            screen: ReviewDetails,
            navigationOptions: {
            title: 'Review Details',
            }
        },
        };

        // home stack navigator screens
        const HomeStack = createStackNavigator(screens, {
        defaultNavigationOptions: {
            headerTintColor: '#444',
            headerStyle: { backgroundColor: '#eee', height: 60 }
        }
        });

        export default HomeStack;

3.gamezone/routes/aboutStack.js

        import { createStackNavigator } from 'react-navigation-stack';
        import React from 'react';                                                              //1.
        import Header from '../shared/header';                                                  //2.
        import About from '../screens/about';

        const screens = {
        About: {
            screen: About,
            navigationOptions: ({ navigation }) => {
            return {
                headerTitle: () => <Header title='GameZone' navigation={navigation} />          //3.
            }
            },
        },
        }

        const AboutStack = createStackNavigator(screens, {
        defaultNavigationOptions: {
            headerTintColor: '#444',
            headerStyle: { backgroundColor: '#eee', height: 60 },
        }
        });

        export default AboutStack;

26.Custom Card Component - card, box, div design
-------------------------------------------------------------------------
1.gamezone/shared/card.js

        import React from 'react';
        import { StyleSheet, View } from 'react-native';

        export default function Card(props) {
        return (
            <View style={styles.card}>
            <View style={styles.cardContent}>
                { props.children }
            </View>
            </View>
        );
        }

        const styles = StyleSheet.create({
        card: {
            borderRadius: 6,
            elevation: 3,
            backgroundColor: '#fff',
            shadowOffset: { width: 1, height: 1 },
            shadowColor: '#333',
            shadowOpacity: 0.3,
            shadowRadius: 2,
            marginHorizontal: 4,
            marginVertical: 6,
        },
        cardContent: {
            marginHorizontal: 18,
            marginVertical: 20,
        }
        });

2.gamezone/screens/home.js

        import React, { useState } from 'react';
        import { StyleSheet, View, Text, TouchableOpacity, FlatList } from 'react-native';
        import { globalStyles } from '../styles/global';
        import Card from '../shared/card';

        export default function Home({ navigation }) {
        const [reviews, setReviews] = useState([
            { title: 'Zelda, Breath of Fresh Air', rating: 5, body: 'lorem ipsum', key: '1' },
            { title: 'Gotta Catch Them All (again)', rating: 4, body: 'lorem ipsum', key: '2' },
            { title: 'Not So "Final" Fantasy', rating: 3, body: 'lorem ipsum', key: '3' },
        ]);

        return (
            <View style={globalStyles.container}>
            <FlatList data={reviews} renderItem={({ item }) => (
                <TouchableOpacity onPress={() => navigation.navigate('ReviewDetails', item)}>
                <Card>                                                                                  //display card
                    <Text style={globalStyles.titleText}>{ item.title }</Text>
                </Card>
                </TouchableOpacity>
            )} />
            </View>
        );
        }

3.gamezone/screens/reviewDetails.js 

        import React from 'react';
        import { StyleSheet, View, Text } from 'react-native';
        import { globalStyles } from '../styles/global';
        import Card from '../shared/card';                                                              //1.

        export default function ReviewDetails({ navigation }) {
        return (
            <View style={globalStyles.container}>
            <Card>                                                                                      //2.display card
                <Text style={globalStyles.titleText}>
                { navigation.getParam('title') }
                </Text>
                <Text>{ navigation.getParam('body') }</Text>
                <Text>{ navigation.getParam('rating') }</Text>
            </Card>
            </View>
        );
        }

27.Using Images - when click list, display rating images base in the rating data in the state
-------------------------------------------------------------------------
1.gamezone/screens/reviewDetails.js

        import React from 'react';
        import { StyleSheet, View, Text, Image } from 'react-native';                                                       //1.insert-image - Image
        import { globalStyles, images } from '../styles/global';                                                            //2.global-images - 
        import Card from '../shared/card';

        export default function ReviewDetails({ navigation }) {
        const rating = navigation.getParam('rating');                                                                       //3.global-images - 
        
        return (
            <View style={globalStyles.container}>
            <Card>
                <Text style={globalStyles.titleText}>
                { navigation.getParam('title') }
                </Text>
                <Text>{ navigation.getParam('body') }</Text>
                <View style={styles.rating}>                                                                                //3.insert-image - 
                    <Text>GameZone rating: </Text>
                    <!-- <Image source={require('../assets/rating-1.png')} /> -->                                           //4.sample1 - when click list, this will display the same image in every list
                    <!-- <Image source={require('../assets/rating-' + navigation.getParam('rating') + '.png')} /> -->       //4.sample2 - screens/home.js/ state, rating:
                    <Image source={images.ratings[rating]} />                                                               //4.global-images - 
                </View>
            </Card>
            </View>
        );
        }

        const styles = StyleSheet.create({
        rating: {                                                                                                           //5.global-images - 
            flexDirection: 'row',
            justifyContent: 'center',
            paddingTop: 16,
            marginTop: 16,
            borderTopWidth: 1,
            borderTopColor: '#eee',
        }
        });

2.gamezone/styles/global.js
        import { StyleSheet } from 'react-native';

        export const globalStyles = StyleSheet.create({
        titleText: {
            fontSize: 18,
            fontWeight: 'bold',
            color: '#333',
        },
        paragraph: {
            marginVertical: 8,
            lineHeight: 20,
        },
        container: {
            flex: 1,
            padding: 20,
        },
        });

        export const images = {                             //1.global-images - 
        ratings: {
            '1': require('../assets/rating-1.png'),
            '2': require('../assets/rating-2.png'),
            '3': require('../assets/rating-3.png'),
            '4': require('../assets/rating-4.png'),
            '5': require('../assets/rating-5.png'),
        }
        };

28.Background Images - 
-------------------------------------------------------------------------
1.gamezone/shared/header.js 

        import React from 'react';
        import { StyleSheet, Text, View, Image, ImageBackground } from 'react-native';                      //1.
        import { MaterialIcons } from '@expo/vector-icons';

        export default function Header({ title, navigation }) {

        const openMenu = () => {
            navigation.openDrawer();
        }

        return (
            <ImageBackground source={require('../assets/game_bg.png')} style={styles.header}>               //5.
                <MaterialIcons name='menu' size={28} onPress={openMenu} style={styles.icon} />
                <View style={styles.headerTitle}>
                    <Image source={require('../assets/heart_logo.png')} style={styles.headerImage} />       //2.
                    <Text style={styles.headerText}>{title}</Text>
                </View>
            </ImageBackground>
        );
        }

        const styles = StyleSheet.create({
        header: {
            width: '100%',
            height: '100%',
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
        },
        headerText: {
            fontWeight: 'bold',
            fontSize: 20,
            color: '#333',
            letterSpacing: 1,
        },
        icon: {
            position: 'absolute',
            left: 16,
        },
        headerTitle: {                                                                                      //3.
            flexDirection: 'row'
        },
        headerImage: {                                                                                      //4.
            width: 26,
            height: 26,
            marginHorizontal: 10
        },
        });

29.Modals - 
-------------------------------------------------------------------------
1.gamezone/screens/home.js

        import React, { useState } from 'react';
        import { StyleSheet, View, Text, TouchableOpacity, FlatList, Modal } from 'react-native';           //1.modal - Modal
        import { globalStyles } from '../styles/global';
        import { MaterialIcons } from '@expo/vector-icons';                                                 //2.model - 
        import Card from '../shared/card';

        export default function Home({ navigation }) {
        const [modalOpen, setModalOpen] = useState(false);
        const [reviews, setReviews] = useState([
            { title: 'Zelda, Breath of Fresh Air', rating: 5, body: 'lorem ipsum', key: '1' },
            { title: 'Gotta Catch Them All (again)', rating: 4, body: 'lorem ipsum', key: '2' },
            { title: 'Not So "Final" Fantasy', rating: 3, body: 'lorem ipsum', key: '3' },
        ]);

        return (
            <View style={globalStyles.container}>
        
            <Modal visible={modalOpen} animationType='slide'>                                               //3.modal - visible={modalOpen}(display modal), animationType='slide'(modal animation)
                <View style={styles.modalContent}>
                <MaterialIcons                                                                              //modal close
                    name='close'                                                                            //modal close button
                    size={24} 
                    style={{...styles.modalToggle, ...styles.modalClose}}                                   //modal css - meaning you can merge all css property
                    onPress={() => setModalOpen(false)} 
                />
                <Text>Hello from the modal :)</Text>
                </View>
            </Modal>

            <MaterialIcons                                                                                  //modal open
                name='add'                                                                                  //modal add button 
                size={24} 
                style={styles.modalToggle}                                                                  //modal css
                onPress={() => setModalOpen(true)}                                                          //modal function
            />

            <FlatList data={reviews} renderItem={({ item }) => (
                <TouchableOpacity onPress={() => navigation.navigate('ReviewDetails', item)}>
                <Card>
                    <Text style={globalStyles.titleText}>{ item.title }</Text>
                </Card>
                </TouchableOpacity>
            )} />

            </View>
        );
        }

        const styles = StyleSheet.create({
        modalToggle: {
            justifyContent: 'center',
            alignItems: 'center',
            marginBottom: 10,
            borderWidth: 1,
            borderColor: '#f2f2f2',
            padding: 10,
            borderRadius: 10,
            alignSelf: 'center',
        },
        modalClose: {
            marginTop: 20,
            marginBottom: 0,
        },
        modalContent: {
            flex: 1,
        }
        });

30-31.Formik Forms - add, display to page and clear field after submit
-------------------------------------------------------------------------
1.gamezone> npm install formik
2.gamezone/screens/reviewForm.js 

        import React from 'react';                                                      //1.
        import { StyleSheet, Button, TextInput, View, Text } from 'react-native';       //2.
        import { globalStyles } from '../styles/global.js';                             //3.
        import { Formik } from 'formik';                                                //4.

        export default function ReviewForm() {

        return (
            
            <View style={globalStyles.container}>                                       //5.global css
            <Formik
                initialValues={{ title: '', body: '', rating: '' }}
                onSubmit={(values, actions) => {
                actions.resetForm();                                                    //31.4.tutorial - clear forms after submit
                addReview(values);                                                      //31.3.tutorial
                }}
            >

                {props => (
                <View>
                    <TextInput
                    style={globalStyles.input}
                    placeholder='Review title'
                    onChangeText={props.handleChange('title')}
                    value={props.values.title}
                    />

                    <TextInput
                    style={globalStyles.input}
                    multiline
                    placeholder='Review details'
                    onChangeText={props.handleChange('body')}
                    value={props.values.body}
                    />

                    <TextInput 
                    style={globalStyles.input}
                    placeholder='Rating (1 - 5)'
                    onChangeText={props.handleChange('rating')}
                    value={props.values.rating}
                    keyboardType='numeric'
                    />
                    
                    <Button color='maroon' title="Submit" onPress={props.handleSubmit} /> 
                </View>
                )}
            </Formik>
            </View>
            
        );
        }

3.gamezone/styles/global.js

        import { StyleSheet } from 'react-native';

        export const globalStyles = StyleSheet.create({
        titleText: {
            fontSize: 18,
            fontWeight: 'bold',
            color: '#333',
        },
        paragraph: {
            marginVertical: 8,
            lineHeight: 20,
        },
        container: {
            flex: 1,
            padding: 20,
        },
        input: {                                                                        //6.global css
            borderWidth: 1,
            borderColor: '#ddd',
            padding: 10,
            fontSize: 18,
            borderRadius: 6,
        },
        });

        export const images = {
        ratings: {
            '1': require('../assets/rating-1.png'),
            '2': require('../assets/rating-2.png'),
            '3': require('../assets/rating-3.png'),
            '4': require('../assets/rating-4.png'),
            '5': require('../assets/rating-5.png'),
        }
        };

4.gamezone/screens/home.js

        import React, { useState } from 'react';
        import { StyleSheet, View, Text, TouchableOpacity, FlatList, Modal } from 'react-native';
        import { globalStyles } from '../styles/global';
        import { MaterialIcons } from '@expo/vector-icons';
        import Card from '../shared/card';
        import ReviewForm from './reviewForm';

        export default function Home({ navigation }) {
        const [modalOpen, setModalOpen] = useState(false);
        const [reviews, setReviews] = useState([
            { title: 'Zelda, Breath of Fresh Air', rating: 5, body: 'lorem ipsum', key: '1' },
            { title: 'Gotta Catch Them All (again)', rating: 4, body: 'lorem ipsum', key: '2' },
            { title: 'Not So "Final" Fantasy', rating: 3, body: 'lorem ipsum', key: '3' },
        ]);

        const addReview = (review) => {                                                                     //31.1.tutorial
            review.key = Math.random().toString();                                                          //   unique key
            setReviews((currentReviews) => {                                                                //   currentReviews or reviews state
              return [review, ...currentReviews];                                                           //   ...currentReviews - insert here the new reviews
            });
            setModalOpen(false);                                                                            //   close modal after forms submit
          };

        return (
            <View style={globalStyles.container}>
        
            <Modal visible={modalOpen} animationType='slide'>
                <View style={styles.modalContent}>                                                          //7.styles.modalContent - para ma apply ang css sa forms
                <MaterialIcons 
                    name='close'
                    size={24} 
                    style={{...styles.modalToggle, ...styles.modalClose}} 
                    onPress={() => setModalOpen(false)} 
                />
                <ReviewForm />                                                                              //31.2.tutorial
                </View>
            </Modal>

            <MaterialIcons 
                name='add' 
                size={24} 
                style={styles.modalToggle}
                onPress={() => setModalOpen(true)} 
            />

            <FlatList data={reviews} renderItem={({ item }) => (
                <TouchableOpacity onPress={() => navigation.navigate('ReviewDetails', item)}>
                <Card>
                    <Text style={globalStyles.titleText}>{ item.title }</Text>
                </Card>
                </TouchableOpacity>
            )} />

            </View>
        );
        }

        const styles = StyleSheet.create({
        modalToggle: {
            justifyContent: 'center',
            alignItems: 'center',
            marginBottom: 10,
            borderWidth: 1,
            borderColor: '#f2f2f2',
            padding: 10,
            borderRadius: 10,
            alignSelf: 'center',
        },
        modalClose: {
            marginTop: 20,
            marginBottom: 0,
        },
        modalContent: {
            flex: 1,
        }
        });

32.Validation with Yup - error message is in tutorial 33
-------------------------------------------------------------------------
1.gamezone> npm install yup
2.gamezone/screens/reviewForm.js

        import React from 'react';
        import { StyleSheet, Button, TextInput, View, Text } from 'react-native';
        import { globalStyles } from '../styles/global.js';
        import { Formik } from 'formik';
        import * as yup from 'yup';                                                         //1.yup - 

        const reviewSchema = yup.object({
        title: yup.string()                                                                 //2.yup - check if input is string and field is required, min of 4 character only
            .required()
            .min(4),
        body: yup.string()
            .required()
            .min(8),
        rating: yup.string()
            .required()
            .test('is-num-1-5', 'Rating must be a number 1 - 5', (val) => {                 //3.yup - rating must only 1 to 5
            return parseInt(val) < 6 && parseInt(val) > 0;
            }),
        });

        export default function ReviewForm({ addReview }) {

        return (
            
            <View style={globalStyles.container}>
            <Formik
                initialValues={{ title: '', body: '', rating: '' }}
                validationSchema={reviewSchema}                                             //4.yup - display error message here
                onSubmit={(values, actions) => {
                actions.resetForm(); 
                addReview(values);
                }}
            >
                {props => (
                <View>
                    <TextInput
                    style={globalStyles.input}
                    placeholder='Review title'
                    onChangeText={props.handleChange('title')}
                    value={props.values.title}
                    />

                    <TextInput
                    style={globalStyles.input}
                    multiline
                    placeholder='Review details'
                    onChangeText={props.handleChange('body')}
                    value={props.values.body}
                    />

                    <TextInput 
                    style={globalStyles.input}
                    placeholder='Rating (1 - 5)'
                    onChangeText={props.handleChange('rating')}
                    value={props.values.rating}
                    keyboardType='numeric'
                    />
                    
                    <Button color='maroon' title="Submit" onPress={props.handleSubmit} /> 
                </View>
                )}
            </Formik>
            </View>
            
        );
        }

33.Showing Form Errors - 
-------------------------------------------------------------------------
1.gamezone/screens/reviewForm.js 

        import React from 'react';
        import { StyleSheet, Button, TextInput, View, Text } from 'react-native';
        import { globalStyles } from '../styles/global.js';                                  //33.1.
        import { Formik } from 'formik';
        import * as yup from 'yup';

        const reviewSchema = yup.object({
        title: yup.string()
            .required()
            .min(4),
        body: yup.string()
            .required()
            .min(8),
        rating: yup.string()
            .required()
            .test('is-num-1-5', 'Rating must be a number 1 - 5', (val) => {
            return parseInt(val) < 6 && parseInt(val) > 0;
            }),
        });

        export default function ReviewForm({ addReview }) {

        return (
            
            <View style={globalStyles.container}>
            <Formik
                initialValues={{ title: '', body: '', rating: '' }}
                validationSchema={reviewSchema}
                onSubmit={(values, actions) => {
                actions.resetForm(); 
                addReview(values);
                }}
            >
                {props => (
                <View>
                    <TextInput
                    style={globalStyles.input}
                    placeholder='Review title'
                    onChangeText={props.handleChange('title')}
                    onBlur={props.handleBlur('title')} 
                    value={props.values.title}                                                                      //33.3.mo display ang error sa field real time  
                    />
                    {/* only if the left value is a valid string, will the right value be displayed */}
                    <Text style={globalStyles.errorText}>{props.touched.title && props.errors.title}</Text>         //33.2.props.errors.title(error message)

                    <TextInput
                    style={globalStyles.input}
                    multiline
                    placeholder='Review details'
                    onChangeText={props.handleChange('body')}
                    onBlur={props.handleBlur('body')}                                                               //33.3.
                    value={props.values.body}
                    />
                    <Text style={globalStyles.errorText}>{props.touched.body && props.errors.body}</Text>           //33.2.props.errors.body(error message)

                    <TextInput 
                    style={globalStyles.input}
                    placeholder='Rating (1 - 5)'
                    onChangeText={props.handleChange('rating')}
                    onBlur={props.handleBlur('rating')}                                                             //33.3.
                    value={props.values.rating}
                    keyboardType='numeric'
                    />
                    <Text style={globalStyles.errorText}>{props.touched.rating && props.errors.rating}</Text>       //33.2.props.errors.rating(error message)
                    
                    <Button color='maroon' title="Submit" onPress={props.handleSubmit} /> 
                </View>
                )}
            </Formik>
            </View>
            
        );
        }

2.gamezone/styles/global.js

        import { StyleSheet } from 'react-native';

        export const globalStyles = StyleSheet.create({
        titleText: {
            fontSize: 18,
            fontWeight: 'bold',
            color: '#333',
        },
        paragraph: {
            marginVertical: 8,
            lineHeight: 20,
        },
        container: {
            flex: 1,
            padding: 20,
        },
        input: {
            borderWidth: 1,
            borderColor: '#ddd',
            padding: 10,
            fontSize: 18,
            borderRadius: 6,
        },
        errorText: {                    //33.4.
            color: 'crimson',
            fontWeight: 'bold',
            marginBottom: 10,
            marginTop: 6,
            textAlign: 'center',
        },
        });

        export const images = {
        ratings: {
            '1': require('../assets/rating-1.png'),
            '2': require('../assets/rating-2.png'),
            '3': require('../assets/rating-3.png'),
            '4': require('../assets/rating-4.png'),
            '5': require('../assets/rating-5.png'),
        }
        };

34.Custom Button Component - button design
-------------------------------------------------------------------------
1.gamezone/shared/button.js

        import React from 'react';
        import { StyleSheet, TouchableOpacity, Text, View } from 'react-native';

        export default function FlatButton({ text, onPress }) {
        return (
            <TouchableOpacity onPress={onPress}>
            <View style={styles.button}>
                <Text style={styles.buttonText}>{text}</Text>
            </View>
            </TouchableOpacity>
        );
        }

        const styles = StyleSheet.create({
        button: {
            borderRadius: 8,
            paddingVertical: 14,
            paddingHorizontal: 10,
            backgroundColor: '#f01d71',
        },
        buttonText: {
            color: 'white',
            fontWeight: 'bold',
            textTransform: 'uppercase',
            fontSize: 16,
            textAlign: 'center',
        }
        });

 2.gamezone/screens/reviewForm.js
 
        import React from 'react';
        import { StyleSheet, Button, TextInput, View, Text } from 'react-native';
        import { globalStyles } from '../styles/global.js';
        import { Formik } from 'formik';
        import * as yup from 'yup';
        import FlatButton from '../shared/button.js';                                       //1.
        
        const reviewSchema = yup.object({
        title: yup.string()
            .required()
            .min(4),
        body: yup.string()
            .required()
            .min(8),
        rating: yup.string()
            .required()
            .test('is-num-1-5', 'Rating must be a number 1 - 5', (val) => {
            return parseInt(val) < 6 && parseInt(val) > 0;
            }),
        });
        
        export default function ReviewForm({ addReview }) {
        
        return (
            
            <View style={globalStyles.container}>
            <Formik
                initialValues={{ title: '', body: '', rating: '' }}
                validationSchema={reviewSchema}
                onSubmit={(values, actions) => {
                actions.resetForm(); 
                addReview(values);
                }}
            >
                {props => (
                <View>
                    <TextInput
                    style={globalStyles.input}
                    placeholder='Review title'
                    onChangeText={props.handleChange('title')}
                    onBlur={props.handleBlur('title')} 
                    value={props.values.title}
                    />
                    {/* only if the left value is a valid string, will the right value be displayed */}
                    <Text style={globalStyles.errorText}>{props.touched.title && props.errors.title}</Text>
        
                    <TextInput
                    style={globalStyles.input}
                    multiline minHeight={60}
                    placeholder='Review details'
                    onChangeText={props.handleChange('body')}
                    onBlur={props.handleBlur('body')}
                    value={props.values.body}
                    />
                    <Text style={globalStyles.errorText}>{props.touched.body && props.errors.body}</Text>
        
                    <TextInput 
                    style={globalStyles.input}
                    placeholder='Rating (1 - 5)'
                    onChangeText={props.handleChange('rating')}
                    onBlur={props.handleBlur('rating')} 
                    value={props.values.rating}
                    keyboardType='numeric'
                    />
                    <Text style={globalStyles.errorText}>{props.touched.rating && props.errors.rating}</Text>
                    
                    <FlatButton onPress={props.handleSubmit} text='submit' />                                           //2.
                </View>
                )}
            </Formik>
            </View>
            
        );
        }

35.Wrap Up - 
-------------------------------------------------------------------------

ERROR
-------------------------------------------------------------------------
response error code:500 - 


---------- DONE ---------- 16 May 2020 ---------- REVIEW ----------





